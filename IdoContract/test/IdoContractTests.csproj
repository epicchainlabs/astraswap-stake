<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <NeoContractManifestPath>..\src\bin\sc\IdoContract.manifest.json</NeoContractManifestPath>
    <NeoPair1ContractManifestPath>..\mock\bin\sc\IdoPairExampleOneContract.manifest.json</NeoPair1ContractManifestPath>
    <NeoPair2ContractManifestPath>..\mock\bin\sc\IdoPairExampleTwoContract.manifest.json</NeoPair2ContractManifestPath>
    <NeoTestTokenContractManifestPath>..\mock\bin\sc\TestToken.manifest.json</NeoTestTokenContractManifestPath>
    <NeoTestPackagesVersion>3.0.3</NeoTestPackagesVersion>
    <RootNamespace>IdoTests</RootNamespace>
    <BuildContracts Condition="'$(BuildContracts)'==''">false</BuildContracts>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\src\IdoContract.csproj">
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
    </ProjectReference>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="coverlet.collector" Version="3.0.3">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="16.9.1" />
    <PackageReference Include="Moq" Version="4.16.1" />
    <PackageReference Include="Neo.Assertions" Version="$(NeoTestPackagesVersion)" />
    <PackageReference Include="Neo.BuildTasks" Version="$(NeoTestPackagesVersion)" PrivateAssets="All" />
    <PackageReference Include="Neo.Test.Harness" Version="$(NeoTestPackagesVersion)" />
    <PackageReference Include="xunit" Version="2.4.1" />
    <PackageReference Include="xunit.runner.visualstudio" Version="2.4.3">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>

  <Target Name="BuildContracts">
    <Exec Command="dotnet build ..\mock\MockContracts.csproj" />
    <Exec Command="dotnet build ..\src\IdoContract.csproj" />
  </Target>

  <Target Name="ConfigureNeoContractInterface" DependsOnTargets="BuildContracts" BeforeTargets="ExecuteNeoContractInterface">
    <PropertyGroup>
      <_NeoContractManifestPath>$([MSBuild]::NormalizePath('$(MSBuildProjectDirectory)', '$(NeoContractManifestPath)'))</_NeoContractManifestPath>
      <_NeoContractInterfacePath>$([MSBuild]::NormalizePath('$(IntermediateOutputPath)', 'contract-interface.cs'))</_NeoContractInterfacePath>
      <_NeoPair1ContractManifestPath>$([MSBuild]::NormalizePath('$(MSBuildProjectDirectory)', '$(NeoPair1ContractManifestPath)'))</_NeoPair1ContractManifestPath>
      <_NeoPair1ContractInterfacePath>$([MSBuild]::NormalizePath('$(IntermediateOutputPath)', 'pair-contract-1-interface.cs'))</_NeoPair1ContractInterfacePath>
      <_NeoPair2ContractManifestPath>$([MSBuild]::NormalizePath('$(MSBuildProjectDirectory)', '$(NeoPair2ContractManifestPath)'))</_NeoPair2ContractManifestPath>
      <_NeoPair2ContractInterfacePath>$([MSBuild]::NormalizePath('$(IntermediateOutputPath)', 'pair-contract-2-interface.cs'))</_NeoPair2ContractInterfacePath>
      <_NeoTestTokenContractManifestPath>$([MSBuild]::NormalizePath('$(MSBuildProjectDirectory)', '$(NeoTestTokenContractManifestPath)'))</_NeoTestTokenContractManifestPath>
      <_NeoTestTokenContractInterfacePath>$([MSBuild]::NormalizePath('$(IntermediateOutputPath)', 'test-token-contract-interface.cs'))</_NeoTestTokenContractInterfacePath>
    </PropertyGroup>
    <ItemGroup>
      <Compile Include="$(_NeoContractInterfacePath)" />
      <Compile Include="$(_NeoPair1ContractInterfacePath)" />
      <Compile Include="$(_NeoPair2ContractInterfacePath)" />
      <Compile Include="$(_NeoTestTokenContractInterfacePath)" />
    </ItemGroup>
  </Target>

  <Target Name="ExecuteNeoContractInterface" DependsOnTargets="BuildContracts" BeforeTargets="ResolveProjectReferences" Inputs="$(_NeoContractManifestPath)" Outputs="$(_NeoContractInterfacePath)">
    <NeoContractInterface ManifestFile="$(_NeoContractManifestPath)" OutputFile="$(_NeoContractInterfacePath)" RootNamespace="$(RootNamespace)" />
    <NeoContractInterface ManifestFile="$(_NeoPair1ContractManifestPath)" OutputFile="$(_NeoPair1ContractInterfacePath)" RootNamespace="$(RootNamespace)" />
    <NeoContractInterface ManifestFile="$(_NeoPair2ContractManifestPath)" OutputFile="$(_NeoPair2ContractInterfacePath)" RootNamespace="$(RootNamespace)" />
    <NeoContractInterface ManifestFile="$(_NeoTestTokenContractManifestPath)" OutputFile="$(_NeoTestTokenContractInterfacePath)" RootNamespace="$(RootNamespace)" />
  </Target>

  <Target Name="ExecuteCreateNeoExpressInstance" AfterTargets="Build" Inputs="$(MSBuildProjectFullPath);@(Compile);" Outputs="$(ProjectDir)/bin/IdoTests.neo-express">
    <Exec WorkingDirectory="$(ProjectDir)" Command="neoxp create -f bin/IdoTests.neo-express" />
    <Exec WorkingDirectory="$(ProjectDir)" Command="neoxp wallet create -i bin/IdoTests.neo-express owner" />
    <Exec WorkingDirectory="$(ProjectDir)" Command="neoxp wallet create -i bin/IdoTests.neo-express alice" />
    <Exec WorkingDirectory="$(ProjectDir)" Command="neoxp wallet create -i bin/IdoTests.neo-express bob" />
    <Exec WorkingDirectory="$(ProjectDir)" Command="neoxp batch -i bin/IdoTests.neo-express setup-test-chain.batch" />
  </Target>

</Project>
